# ~/Desktop/glowing-enigma/robot-programming-ojt/practices에서 시작

cd codes
mkdir -p sample01/src
cd sample01/src
catkin_init_workspace
cd ..
catkin_make
source devel/setup.bash
roscore
(ctrl+c)

vim ~/.bashrc
```추가 사항
# Set ROS Noetic
source ~/Desktop/glowing-enigma/robot-programming-ojt/practices/codes/sample01/devel/setup.bash
```

source ~/.bashrc

cd ~/Desktop/glowing-enigma/robot-programming-ojt/practices/codes/sample01/src
catkin_create_pkg ros_tutorials_topic message_generation std_msgs roscpp

cd ros_tutorials_topic

# 현재 include/ros_tutorials_topic과 src가 비어있는 상태

# package.xml과 CMakeLists.txt를 수정함

roscd ros_tutorials_topic
mkdir msg
cd msg

# MsgTutorial.msg 파일을 생성함

roscd ros_tutorials_topic/src

# topic_publisher.cpp, topic_subscriber.cpp 파일을 생성함

cd ~/Desktop/glowing-enigma/robot-programming-ojt/practices/codes/sample01
catkin_make

# catkin_make를 통해 빌드한 실행파일은 sample01/devel과 sample01/build에 생성되어 있음

[ Terminal 1 ]
roscore

[ Terminal 2 ]
rosrun ros_tutorials_topic topic_publisher

[ Terminal 3 ]
rostopic list
rostopic info /ros_tutorial_msg
rostopic echo /ros_tutorial_msg

[ Terminal 4 ]
rosrun ros_tutorials_topic topic_subscriber

[ Terminal 5 ]
rqt_graph

# Terminal 1, Terminal 2, Terminal 3, Terminal 4, Terminal 5를 모두 종료함

# ~/Desktop/glowing-enigma/robot-programming-ojt/practices/codes/sample01에서 시작

cd src
catkin_create_pkg ros_tutorials_service message_generation std_msgs roscpp

cd ros_tutorials_service
ls

roscd ros_tutorials_service
mkdir srv
cd srv

# SrvTutorial.srv 파일을 생성함

roscd ros_tutorials_service/src

# service_server.cpp, service_client.cpp 파일을 생성함

cd ~/Desktop/glowing-enigma/robot-programming-ojt/practices/codes/sample01
catkin_make

# catkin_make를 통해 빌드한 실행파일은 sample01/devel과 sample01/build에 생성되어 있음

[ Terminal 1 ]
roscore

[ Terminal 2 ]
rosrun ros_tutorials_service service_server

[ Terminal 3 ]
rosrun ros_tutorials_service service_client 2 3

# Terminal 1, Terminal 2를 종료함
# Terminal 3은 결과값을 받고 바로 종료됨
# 즉, 일회성이므로 서비스는 rqt_graph 등에서 확인할 수 없음

# `rosservice call /ros_tutorial_srv 2 3`과 동일하게 동작

# 하나의 노드는 복수의 ros::Publisher, ros::Subscriber, ros::ServiceServer, ros::ServiceClient 역할을 할 수 있음

# ~/Desktop/glowing-enigma/robot-programming-ojt/practices/codes/sample01에서 시작

cd src
catkin_create_pkg ros_tutorials_parameter message_generation std_msgs roscpp

roscd ros_tutorials_parameter

# 이후 아래 링크와 같이 디렉토리를 구성함
# 링크 : https://github.com/ROBOTIS-GIT/ros_tutorials/tree/master/ros_tutorials_parameter

# ~/Desktop/glowing-enigma/robot-programming-ojt/practices/codes/sample01에서 시작

[ Terminal 1 ]
catkin_make
roscore

[ Terminal 2 ]
rosrun ros_tutorials_parameter service_server_with_parameter

[ Terminal 3 ]
rosrun ros_tutorials_parameter service_client_with_parameter 2 3

[ Terminal 4 ]
rosparam set /calculation method 2

[ Terminal 5 ]
rosrun ros_tutorials_parameter service_client_with_paramter 2 3

[ Terminal 6 ]
rosparam set /calculation method 3

[ Terminal 7 ]
rosrun ros_tutorials_parameter service_client_with_parameter 2 3

# roslaunch를 사용하기 위해 ros_tutorials_topic 패키지를 활용함

roscd ros_tutorials_topic
mkdir launch

# union.launch 파일을 생성함

# ~/Desktop/glowing-enigma/robot-programming-ojt/practices/codes/sample01에서 시작

[ Terminal 1 ]
roscore

[ Terminal 2 ]
roslaunch ros_tutorials_topic union.launch --screen

# Terminal 1, Terminal 2를 종료함
